interval_estimate1(x, alpha = 0.01)
interval_var1(x,alpha=0.01)
library(MASS)
fitdistr(x, 'normal')
#2.2
#vidurkis
mean(x)
#dispersija
n = length(x)
sigma2 = ((n-1)/n)*var(x)
sigma2
sqrt(sigma2)
hist(x)
boxplot(x,horizontal=TRUE)#staciakamp. Diag.
qqnorm(x)
qqline(x)
boxplot(x,horizontal=TRUE)#staciakamp. Diag.
qqnorm(x)
qqline(x)
library(OneTwoSamples)
interval_estimate1(x, alpha = 0.01)
interval_var1(x,alpha=0.01)
mean_test1(x,mu=8,side=1)
mean_test1(x,mu=3,side=1)
mean_test1(x,mu=8,side=1)
mean_test1(x,mu=7,side=1)
mean_test1(x,mu=10,side=1)
mean_test1(x,mu=7,side=1)
mean_test1(x,mu=9,side=1)
mean_test1(x,mu=8,side=1)
mean_test1(x,mu=7,side=-1)
mean_test1(x,mu=8,side=-1)
mean_test1(x,mu=8,side=1)
mean_test1(x,mu=9,side=1)
?mean_test1
mean_test1(x,mu=9,side=1)
mean_test1(x,mu=7,side=1)
mean_test1(x,mu=8,side=1)
mean_test1(x,mu=8,side=-1)
mean_test1(x,mu=9,side=-1)
mean_test1(x,mu=9,side=0)
mean_test1(x,mu=9,side=1)
mean_test1(x,mu=20,side=1)
mean_test1(x,mu=8,side=1)
x < -c(1, 0, -1, -1, 3)
x <- c(1, 0, -1, -1, 3)
x
var(x)
mean(x)
y <- c(0.19, 0.04, 0.09, 0.19, 0.16);
y
mean_test1(x,mu=8,side=1)
mean(y)
1/mean(y)
z <- c(-3.87, -1.89, -0.86, -0.52, -2.26, -1.15)
z
library(OneTwoSamples)
mean_test1(x,mu=8,side=1)
mean_test1(x,mu=-1, sigma = 1,side=1)
mean_test1(x,mu=-1, sigma = 1,side=-1)
?sd
?quantile
quantile(x, type = 2)
quantile(x,0.25, type=2)
quantile(x,0.50, type=2)
quantile(x,0.75, type=2)
quantile(x,1, type=2)
attach(duomenys1)
x = duomenys1$Variantas_72
#Tai tolygusis skirstinys
library(UsingR)
hist(x)
boxplot(x)
qqline(z)
qqline(x)
#Tai tolygusis skirstinys
library(UsingR)
hist(x)
?boxplot
#Tai tolygusis skirstinys
library(UsingR)
hist(x)
boxplot(x, HORIZONTAL)
#Tai tolygusis skirstinys
library(UsingR)
hist(x)
boxplot(x)
boxplot(x, horizontal = TRUE)
attach(duomenys1)
x = duomenys1$Variantas_72
#Imties dydis
n = length(x)
#Minnimumas
Min_x = min(x)
#Maksimumas
Max_x = max(x)
#Imties plotis
delta = Max_x - Min_x
#Kvartiliai
quantile(x, type = 2)
quantile(x,0.25, type=2)
quantile(x,0.50, type=2)
quantile(x,0.75, type=2)
quantile(x,1, type=2)
#Kvartilių skirtumas
IQR(x, type = 2)
#Empirinis vidurkis
mean(x)
#Dispersija
var(x)
#Standartinis nuokrypis
sd(x)
#Tai tolygusis skirstinys
library(UsingR)
hist(x)
boxplot(x, horizontal = TRUE)
#Taškiniai įverčiai
Min_x
Max_x
#Suderinamumo hipotezė L = 0.01, todėl p-value > L, hipotezės, kad duomenys pasiskirstę tolygiai nereikėtų atmesti.
ks.test(x, 'punif',Min_x, Max_x)
attach(duomenys1)
x = duomenys1$Variantas_72
#Imties dydis
n = length(x)
#Minnimumas
Min_x = min(x)
#Maksimumas
Max_x = max(x)
#Imties plotis
delta = Max_x - Min_x
#Kvartiliai
quantile(x, type = 2)
quantile(x,0.25, type=2)
quantile(x,0.50, type=2)
quantile(x,0.75, type=2)
quantile(x,1, type=2)
#Kvartilių skirtumas
IQR(x, type = 2)
#Empirinis vidurkis
mean(x)
#Dispersija
var(x)
#Standartinis nuokrypis
sd(x)
#Tai tolygusis skirstinys
library(UsingR)
hist(x)
boxplot(x, horizontal = TRUE)
#Taškiniai įverčiai
Min_x
Max_x
#Suderinamumo hipotezė L = 0.01, todėl p-value > L, hipotezės, kad duomenys pasiskirstę tolygiai nereikėtų atmesti.
ks.test(x, 'punif',Min_x, Max_x)
n
Min_x
Max_attach(duomenys1)
attach(duomenys1)
x = duomenys1$Variantas_72
#Imties dydis
n = length(x)
n
#Minnimumas
Min_x = min(x)
Min_x
#Maksimumas
Max_x = max(x)
Max_x
#Imties plotis
delta = Max_x - Min_x
delta
#Kvartiliai
quantile(x, type = 2)
quantile(x,0.25, type=2)
quantile(x,0.50, type=2)
quantile(x,0.75, type=2)
quantile(x,1, type=2)
#Kvartilių skirtumas
IQR(x, type = 2)
#Empirinis vidurkis
mean(x)
#Dispersija
var(x)
#Standartinis nuokrypis
sd(x)
#Tai tolygusis skirstinys
library(UsingR)
hist(x)
boxplot(x, horizontal = TRUE)
#Taškiniai įverčiai
Min_x
Max_x
#Suderinamumo hipotezė L = 0.01, todėl p-value > L, hipotezės, kad duomenys pasiskirstę tolygiai nereikėtų atmesti.
ks.test(x, 'punif',Min_x, Max_x)
hist(x)
boxplot(x, horizontal = TRUE)
attach(duomenys2)
x = duomenys2$Variantas_72
#2.1 Normalusis skirstinys
hist(x)
boxplot(x,horizontal=TRUE)
qqnorm(x)
qqline(x)
#2.2
#vidurkis
mean(x)
#dispersija
n = length(x)
sigma2 = ((n-1)/n)*var(x)
#2.3
#γ = 0.99, α =  1 - γ, α = 0.01
library(OneTwoSamples)
interval_estimate1(x, alpha = 0.01)
interval_var1(x,alpha=0.01)
#2.4 vidurkiu reiksme 72 = 8 α = 0.1, kadangi α < p_value hipotezes neatmetame
mean_test1(x,mu=8,side=1)
attach(duomenys2)
x = duomenys2$Variantas_72
#2.1 Normalusis skirstinys
hist(x)
boxplot(x,horizontal=TRUE)
qqnorm(x)
qqline(x)
#2.2
#vidurkis
mean(x)
#dispersija
n = length(x)
n
sigma2 = ((n-1)/n)*var(x)
sigma2
#2.3
#γ = 0.99, α =  1 - γ, α = 0.01
library(OneTwoSamples)
interval_estimate1(x, alpha = 0.01)
interval_var1(x,alpha=0.01)
#2.4 vidurkiu reiksme 72 = 8 α = 0.1, kadangi α < p_value hipotezes neatmetame
mean_test1(x,mu=8,side=1)
boxplot(x,horizontal=TRUE)
qqnorm(x)
qqline(x)
ks.test(x, 'punif',Min_x, Max_x)
attach(duomenys1)
x = duomenys1$Variantas_72
#Imties dydis
n = length(x)
n
#Minnimumas
Min_x = min(x)
Min_x
#Maksimumas
Max_x = max(x)
Max_x
#Imties plotis
delta = Max_x - Min_x
delta
#Kvartiliai
quantile(x, type = 2)
quantile(x,0.25, type=2)
quantile(x,0.50, type=2)
quantile(x,0.75, type=2)
quantile(x,1, type=2)
#Kvartilių skirtumas
IQR(x, type = 2)
#Empirinis vidurkis
mean(x)
#Dispersija
var(x)
#Standartinis nuokrypis
sd(x)
#Tai tolygusis skirstinys
library(UsingR)
hist(x)
boxplot(x, horizontal = TRUE)
#Taškiniai įverčiai
Min_x
Max_x
#Suderinamumo hipotezė α = 0.01, todėl p-value > α, hipotezės, kad duomenys pasiskirstę tolygiai nereikėtų atmesti.
ks.test(x, 'punif',Min_x, Max_x)
hist(x)
interval_estimate1(x, alpha = 0.01)
mean_test1(x,mu=8,side=1)
attach(duomenys2)
x = duomenys2$Variantas_72
#2.1 Normalusis skirstinys
hist(x)
boxplot(x,horizontal=TRUE)
qqnorm(x)
qqline(x)
#2.2
#vidurkis
mean(x)
#dispersija
n = length(x)
n
sigma2 = ((n-1)/n)*var(x)
sigma2
#2.3
#γ = 0.99, α =  1 - γ, α = 0.01
library(OneTwoSamples)
# Vidurkio pasikliautinieji intervalai (a ir b)
interval_estimate1(x, alpha = 0.01)
#Dispersijos pasikliautinieji intervalai (a ir b)
interval_var1(x,alpha=0.01)
#2.4 vidurkių reiksmė 72 = 8, α = 0.1, kadangi α < p_value hipotezės - vidurkio ligybės skaičiui neatmetame
mean_test1(x,mu=8,side=1)attach(duomenys2)
attach(duomenys2)
x = duomenys2$Variantas_72
#2.1 Normalusis skirstinys
hist(x)
boxplot(x,horizontal=TRUE)
qqnorm(x)
qqline(x)
#2.2
#vidurkis
mean(x)
#dispersija
n = length(x)
n
sigma2 = ((n-1)/n)*var(x)
sigma2
#2.3
#γ = 0.99, α =  1 - γ, α = 0.01
library(OneTwoSamples)
# Vidurkio pasikliautinieji intervalai (a ir b)
interval_estimate1(x, alpha = 0.01)
#Dispersijos pasikliautinieji intervalai (a ir b)
interval_var1(x,alpha=0.01)
#2.4 vidurkių reiksmė 72 = 8, α = 0.1, kadangi α < p_value hipotezės - vidurkio ligybės skaičiui neatmetame
mean_test1(x,mu=8,side=1)
mean_test1(x,mu=8)
mean_test1(x,mu=8,side=0)
2 * pnorm(mean(x), sd(x))
pnorm(mean(x), sd(x))
mean_test1(x,mu=8,side=1)
zn = (mean(x)-8)/sd(x)*sqrt(length(x))
zn
zn = (mean(x)-8)/sd(x)*sqrt(length(x))
2*qnorm(zn)
zn
2*qnorm(zn)
2*qnorm(mean(x)-8)/sd(x)*sqrt(length(x))
qnorm(mean(x)-8)/sd(x)*sqrt(length(x))
attach(duomenys1)
x = duomenys1$Variantas_72
#Imties dydis
n = length(x)
n
#Minnimumas
Min_x = min(x)
Min_x
#Maksimumas
Max_x = max(x)
Max_x
#Imties plotis
delta = Max_x - Min_x
delta
#Kvartiliai
quantile(x, type = 2)
quantile(x,0.25, type=2)
quantile(x,0.50, type=2)
quantile(x,0.75, type=2)
quantile(x,1, type=2)
#Kvartilių skirtumas
IQR(x, type = 2)
#Empirinis vidurkis
mean(x)
#Dispersija
var(x)
#Standartinis nuokrypis
sd(x)
#Tai tolygusis skirstinys
library(UsingR)
hist(x)
boxplot(x, horizontal = TRUE)
#Taškiniai įverčiai
Min_x
Max_x
#Suderinamumo hipotezė α = 0.01, todėl p-value > α, hipotezės, kad duomenys pasiskirstę tolygiai nereikėtų atmesti.
ks.test(x, 'punif',Min_x, Max_x)
attach(duomenys1)
x = duomenys1$Variantas_72
#Imties dydis
n = length(x)
n
#Minnimumas
Min_x = min(x)
Min_x
#Maksimumas
Max_x = max(x)
Max_x
#Imties plotis
delta = Max_x - Min_x
delta
#Kvartiliai
quantile(x, type = 2)
quantile(x,0.25, type=2)
quantile(x,0.50, type=2)
quantile(x,0.75, type=2)
quantile(x,1, type=2)
#Kvartilių skirtumas
IQR(x, type = 2)
#Empirinis vidurkis
mean(x)
#Dispersija
var(x)
#Standartinis nuokrypis
sd(x)
#Tai tolygusis skirstinys
library(UsingR)
hist(x)
boxplot(x, horizontal = TRUE)
#Taškiniai įverčiai
Min_x
Max_x
#Suderinamumo hipotezė α = 0.01, todėl p-value > α, hipotezės, kad duomenys pasiskirstę tolygiai nereikėtų atmesti.
ks.test(x, 'punif',Min_x, Max_x)
attach(duomenys2)
x = duomenys2$Variantas_72
#2.1 Normalusis skirstinys
hist(x)
boxplot(x,horizontal=TRUE)
qqnorm(x)
qqline(x)
#2.2
#vidurkis
mean(x)
#dispersija
n = length(x)
n
sigma2 = ((n-1)/n)*var(x)
sigma2
#2.3
#γ = 0.99, α =  1 - γ, α = 0.01
library(OneTwoSamples)
# Vidurkio pasikliautinieji intervalai (a ir b)
interval_estimate1(x, alpha = 0.01)
#Dispersijos pasikliautinieji intervalai (a ir b)
interval_var1(x,alpha=0.01)
#2.4 vidurkių reiksmė 272 = 8, α = 0.1, kadangi α < p_value hipotezės - vidurkio ligybės skaičiui neatmetame
mean_test1(x,mu=8,side=1)
y <- c(2.11, 3.48, 2.85, 2.09, 2.31)
y
library(OneTwoSamples)
ks.test(x,"normal",a,b)
ks.test(x,"norma",a,b)
ks.test(x,"pnormal",a,b)
/ks.test
?ks.test
ks.test(x,"pnorm",a,b)
ks.test(x,"pnorm")
interval_var1(y)
n = length(y)
sigma2 = ((n-1)/n)*var(y)
sigma2
sqrt(sigma2)
y <- c(-3.87, -1.89, -0.86, -0.52, -2.26, -1.15)
yu
y
var_test1(y, sigma = 1, -1)
var_test1(y,  1, -1)
y <- c(0.02, 1.69, 4.99, 6.15, 0.93, 3.95)
y
mean_test1(x,mu=8,side=1)
ks.test(x, 'punif',Min_x, Max_x)
ks.test(y, 'pnorm',3, 4)
ks.test(y, 'pnorm',3, 2)
y <- c(2.11, 3.48, 2.85, 2.09, 2.31)
y
interval_var1(y,alpha=0.1, -1)
interval_var1(y,alpha=0.1, 1)
interval_var1(y,alpha=0.1, -1)
interval_var1(y,alpha=0.1)
interval_estimate1(y, sqrt(3), 0.01)
interval_estimate1(y, sqrt(3), 0.05)
y <- c(-3.87, -1.89, -0.86, -0.52, -2.26, -1.15)
y
var_test1(y, -1, -1, 1)
var_test1(y, 1, -1, 1)
ks.test(x, 'punif',Min_x, Max_x)
y <- c(0.02, 1.69, 4.99, 6.15, 0.93, 3.95)
ks.test(x, 'punif',0, 7)
min(y)
ks.test(y, 'punif',0, 7)
y <- c(0, 2, 5, 4, 8, 2)
sd(y)
y <- c(2.11, 3.48, 2.85, 2.09, 2.31)
interval_estimate1(y, -1, 0.05)
y <- c(-3.87, -1.89, -0.86, -0.52, -2.26, -1.15)
var_test1(y, -1, -1, 0)
var_test1(y, -1, -1, 1)
var_test1(y, -1, 1)
var_test1(y, -1, -1, -1)
var_test1(y, -1, -1, 0)
var_test1(y, -1, -1, )
var_test1(y, -1, -1, 1)
mean_test1(y, -1, -1, 1)
mean_test1(y, -1, -1, 0)
y <- c(2.5, 4.3, 10.8, 9.1, 5.3)
mean(y)
y <- c(2.11, 3.48, 2.85, 2.09, 2.31)
interval_estimate1(x, alpha = 0.05)
interval_estimate1(y, alpha = 0.05)
interval_var1(y,alpha=0.05)
y <- c(-3.87, -1.89, -0.86, -0.52, -2.26, -1.15)
mean_test1(y, -1, 1, -1)
y <- c(0.02, 1.69, 4.99, 6.15, 0.93, 3.95)
ks.test(y, 'pexp',0,5)
?ks.test
ks.test(y, 'punif',0,5)
ks.test(y, 'pexp',0,5)
ks.test(y, 'pexp',0.5)

// Generated from c:\Users\Labas\Desktop\Cmatch aruno\CMatch\CMatch\Content\CMatch.g4 by ANTLR 4.9.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CMatchLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, BOOL_OP=47, INTEGER=48, TOUPLE=49, DOUBLE=50, STRING=51, BOOL=52, 
		NULL=53, POSITIVE=54, WS=55, IDENTIFIER=56;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
			"T__41", "T__42", "T__43", "T__44", "T__45", "BOOL_OP", "INTEGER", "TOUPLE", 
			"DOUBLE", "STRING", "BOOL", "NULL", "POSITIVE", "WS", "IDENTIFIER"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "';'", "'if'", "'('", "')'", "'or'", "'for'", "'{'", "'}'", "'match'", 
			"'case'", "':'", "'when'", "'='", "','", "'func'", "'return'", "'!'", 
			"'*'", "'/'", "'%'", "'+'", "'-'", "'=='", "'!='", "'>'", "'<'", "'>='", 
			"'<='", "'constint'", "'conststring'", "'constdouble'", "'constbool'", 
			"'#.'", "'##.'", "'###.'", "'####.'", "'-#.'", "'-##.'", "'-###.'", "'-####.'", 
			"'.#'", "'.##'", "'.###'", "'.####'", "'#'", "'_'", null, null, null, 
			null, null, null, "'Null'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, "BOOL_OP", 
			"INTEGER", "TOUPLE", "DOUBLE", "STRING", "BOOL", "NULL", "POSITIVE", 
			"WS", "IDENTIFIER"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CMatchLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CMatch.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2:\u0193\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\3\2\3\2\3\3\3\3\3\3\3\4"+
		"\3\4\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3"+
		"\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3"+
		"\16\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3"+
		"\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3"+
		"\30\3\30\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3"+
		"\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3"+
		"\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3"+
		" \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3#\3#\3#\3#\3$\3$\3$\3"+
		"$\3$\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3("+
		"\3(\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3+\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-"+
		"\3-\3-\3-\3.\3.\3/\3/\3\60\3\60\3\60\3\60\5\60\u0133\n\60\3\61\5\61\u0136"+
		"\n\61\3\61\6\61\u0139\n\61\r\61\16\61\u013a\3\62\3\62\3\62\3\62\3\62\3"+
		"\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\5\62\u014f"+
		"\n\62\3\63\5\63\u0152\n\63\3\63\6\63\u0155\n\63\r\63\16\63\u0156\3\63"+
		"\3\63\6\63\u015b\n\63\r\63\16\63\u015c\3\64\3\64\7\64\u0161\n\64\f\64"+
		"\16\64\u0164\13\64\3\64\3\64\3\64\7\64\u0169\n\64\f\64\16\64\u016c\13"+
		"\64\3\64\5\64\u016f\n\64\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65"+
		"\5\65\u017a\n\65\3\66\3\66\3\66\3\66\3\66\3\67\6\67\u0182\n\67\r\67\16"+
		"\67\u0183\38\68\u0187\n8\r8\168\u0188\38\38\39\39\79\u018f\n9\f9\169\u0192"+
		"\139\2\2:\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33"+
		"\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67"+
		"\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65"+
		"i\66k\67m8o9q:\3\2\t\3\2//\3\2\62;\3\2$$\3\2))\5\2\13\f\17\17\"\"\5\2"+
		"C\\aac|\5\2\62;C\\c|\2\u01a1\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3"+
		"\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2"+
		"\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37"+
		"\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3"+
		"\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2"+
		"\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C"+
		"\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2"+
		"\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2"+
		"\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i"+
		"\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\3s\3\2\2\2\5u\3\2"+
		"\2\2\7x\3\2\2\2\tz\3\2\2\2\13|\3\2\2\2\r\177\3\2\2\2\17\u0083\3\2\2\2"+
		"\21\u0085\3\2\2\2\23\u0087\3\2\2\2\25\u008d\3\2\2\2\27\u0092\3\2\2\2\31"+
		"\u0094\3\2\2\2\33\u0099\3\2\2\2\35\u009b\3\2\2\2\37\u009d\3\2\2\2!\u00a2"+
		"\3\2\2\2#\u00a9\3\2\2\2%\u00ab\3\2\2\2\'\u00ad\3\2\2\2)\u00af\3\2\2\2"+
		"+\u00b1\3\2\2\2-\u00b3\3\2\2\2/\u00b5\3\2\2\2\61\u00b8\3\2\2\2\63\u00bb"+
		"\3\2\2\2\65\u00bd\3\2\2\2\67\u00bf\3\2\2\29\u00c2\3\2\2\2;\u00c5\3\2\2"+
		"\2=\u00ce\3\2\2\2?\u00da\3\2\2\2A\u00e6\3\2\2\2C\u00f0\3\2\2\2E\u00f3"+
		"\3\2\2\2G\u00f7\3\2\2\2I\u00fc\3\2\2\2K\u0102\3\2\2\2M\u0106\3\2\2\2O"+
		"\u010b\3\2\2\2Q\u0111\3\2\2\2S\u0118\3\2\2\2U\u011b\3\2\2\2W\u011f\3\2"+
		"\2\2Y\u0124\3\2\2\2[\u012a\3\2\2\2]\u012c\3\2\2\2_\u0132\3\2\2\2a\u0135"+
		"\3\2\2\2c\u014e\3\2\2\2e\u0151\3\2\2\2g\u016e\3\2\2\2i\u0179\3\2\2\2k"+
		"\u017b\3\2\2\2m\u0181\3\2\2\2o\u0186\3\2\2\2q\u018c\3\2\2\2st\7=\2\2t"+
		"\4\3\2\2\2uv\7k\2\2vw\7h\2\2w\6\3\2\2\2xy\7*\2\2y\b\3\2\2\2z{\7+\2\2{"+
		"\n\3\2\2\2|}\7q\2\2}~\7t\2\2~\f\3\2\2\2\177\u0080\7h\2\2\u0080\u0081\7"+
		"q\2\2\u0081\u0082\7t\2\2\u0082\16\3\2\2\2\u0083\u0084\7}\2\2\u0084\20"+
		"\3\2\2\2\u0085\u0086\7\177\2\2\u0086\22\3\2\2\2\u0087\u0088\7o\2\2\u0088"+
		"\u0089\7c\2\2\u0089\u008a\7v\2\2\u008a\u008b\7e\2\2\u008b\u008c\7j\2\2"+
		"\u008c\24\3\2\2\2\u008d\u008e\7e\2\2\u008e\u008f\7c\2\2\u008f\u0090\7"+
		"u\2\2\u0090\u0091\7g\2\2\u0091\26\3\2\2\2\u0092\u0093\7<\2\2\u0093\30"+
		"\3\2\2\2\u0094\u0095\7y\2\2\u0095\u0096\7j\2\2\u0096\u0097\7g\2\2\u0097"+
		"\u0098\7p\2\2\u0098\32\3\2\2\2\u0099\u009a\7?\2\2\u009a\34\3\2\2\2\u009b"+
		"\u009c\7.\2\2\u009c\36\3\2\2\2\u009d\u009e\7h\2\2\u009e\u009f\7w\2\2\u009f"+
		"\u00a0\7p\2\2\u00a0\u00a1\7e\2\2\u00a1 \3\2\2\2\u00a2\u00a3\7t\2\2\u00a3"+
		"\u00a4\7g\2\2\u00a4\u00a5\7v\2\2\u00a5\u00a6\7w\2\2\u00a6\u00a7\7t\2\2"+
		"\u00a7\u00a8\7p\2\2\u00a8\"\3\2\2\2\u00a9\u00aa\7#\2\2\u00aa$\3\2\2\2"+
		"\u00ab\u00ac\7,\2\2\u00ac&\3\2\2\2\u00ad\u00ae\7\61\2\2\u00ae(\3\2\2\2"+
		"\u00af\u00b0\7\'\2\2\u00b0*\3\2\2\2\u00b1\u00b2\7-\2\2\u00b2,\3\2\2\2"+
		"\u00b3\u00b4\7/\2\2\u00b4.\3\2\2\2\u00b5\u00b6\7?\2\2\u00b6\u00b7\7?\2"+
		"\2\u00b7\60\3\2\2\2\u00b8\u00b9\7#\2\2\u00b9\u00ba\7?\2\2\u00ba\62\3\2"+
		"\2\2\u00bb\u00bc\7@\2\2\u00bc\64\3\2\2\2\u00bd\u00be\7>\2\2\u00be\66\3"+
		"\2\2\2\u00bf\u00c0\7@\2\2\u00c0\u00c1\7?\2\2\u00c18\3\2\2\2\u00c2\u00c3"+
		"\7>\2\2\u00c3\u00c4\7?\2\2\u00c4:\3\2\2\2\u00c5\u00c6\7e\2\2\u00c6\u00c7"+
		"\7q\2\2\u00c7\u00c8\7p\2\2\u00c8\u00c9\7u\2\2\u00c9\u00ca\7v\2\2\u00ca"+
		"\u00cb\7k\2\2\u00cb\u00cc\7p\2\2\u00cc\u00cd\7v\2\2\u00cd<\3\2\2\2\u00ce"+
		"\u00cf\7e\2\2\u00cf\u00d0\7q\2\2\u00d0\u00d1\7p\2\2\u00d1\u00d2\7u\2\2"+
		"\u00d2\u00d3\7v\2\2\u00d3\u00d4\7u\2\2\u00d4\u00d5\7v\2\2\u00d5\u00d6"+
		"\7t\2\2\u00d6\u00d7\7k\2\2\u00d7\u00d8\7p\2\2\u00d8\u00d9\7i\2\2\u00d9"+
		">\3\2\2\2\u00da\u00db\7e\2\2\u00db\u00dc\7q\2\2\u00dc\u00dd\7p\2\2\u00dd"+
		"\u00de\7u\2\2\u00de\u00df\7v\2\2\u00df\u00e0\7f\2\2\u00e0\u00e1\7q\2\2"+
		"\u00e1\u00e2\7w\2\2\u00e2\u00e3\7d\2\2\u00e3\u00e4\7n\2\2\u00e4\u00e5"+
		"\7g\2\2\u00e5@\3\2\2\2\u00e6\u00e7\7e\2\2\u00e7\u00e8\7q\2\2\u00e8\u00e9"+
		"\7p\2\2\u00e9\u00ea\7u\2\2\u00ea\u00eb\7v\2\2\u00eb\u00ec\7d\2\2\u00ec"+
		"\u00ed\7q\2\2\u00ed\u00ee\7q\2\2\u00ee\u00ef\7n\2\2\u00efB\3\2\2\2\u00f0"+
		"\u00f1\7%\2\2\u00f1\u00f2\7\60\2\2\u00f2D\3\2\2\2\u00f3\u00f4\7%\2\2\u00f4"+
		"\u00f5\7%\2\2\u00f5\u00f6\7\60\2\2\u00f6F\3\2\2\2\u00f7\u00f8\7%\2\2\u00f8"+
		"\u00f9\7%\2\2\u00f9\u00fa\7%\2\2\u00fa\u00fb\7\60\2\2\u00fbH\3\2\2\2\u00fc"+
		"\u00fd\7%\2\2\u00fd\u00fe\7%\2\2\u00fe\u00ff\7%\2\2\u00ff\u0100\7%\2\2"+
		"\u0100\u0101\7\60\2\2\u0101J\3\2\2\2\u0102\u0103\7/\2\2\u0103\u0104\7"+
		"%\2\2\u0104\u0105\7\60\2\2\u0105L\3\2\2\2\u0106\u0107\7/\2\2\u0107\u0108"+
		"\7%\2\2\u0108\u0109\7%\2\2\u0109\u010a\7\60\2\2\u010aN\3\2\2\2\u010b\u010c"+
		"\7/\2\2\u010c\u010d\7%\2\2\u010d\u010e\7%\2\2\u010e\u010f\7%\2\2\u010f"+
		"\u0110\7\60\2\2\u0110P\3\2\2\2\u0111\u0112\7/\2\2\u0112\u0113\7%\2\2\u0113"+
		"\u0114\7%\2\2\u0114\u0115\7%\2\2\u0115\u0116\7%\2\2\u0116\u0117\7\60\2"+
		"\2\u0117R\3\2\2\2\u0118\u0119\7\60\2\2\u0119\u011a\7%\2\2\u011aT\3\2\2"+
		"\2\u011b\u011c\7\60\2\2\u011c\u011d\7%\2\2\u011d\u011e\7%\2\2\u011eV\3"+
		"\2\2\2\u011f\u0120\7\60\2\2\u0120\u0121\7%\2\2\u0121\u0122\7%\2\2\u0122"+
		"\u0123\7%\2\2\u0123X\3\2\2\2\u0124\u0125\7\60\2\2\u0125\u0126\7%\2\2\u0126"+
		"\u0127\7%\2\2\u0127\u0128\7%\2\2\u0128\u0129\7%\2\2\u0129Z\3\2\2\2\u012a"+
		"\u012b\7%\2\2\u012b\\\3\2\2\2\u012c\u012d\7a\2\2\u012d^\3\2\2\2\u012e"+
		"\u012f\7(\2\2\u012f\u0133\7(\2\2\u0130\u0131\7~\2\2\u0131\u0133\7~\2\2"+
		"\u0132\u012e\3\2\2\2\u0132\u0130\3\2\2\2\u0133`\3\2\2\2\u0134\u0136\t"+
		"\2\2\2\u0135\u0134\3\2\2\2\u0135\u0136\3\2\2\2\u0136\u0138\3\2\2\2\u0137"+
		"\u0139\t\3\2\2\u0138\u0137\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u0138\3\2"+
		"\2\2\u013a\u013b\3\2\2\2\u013bb\3\2\2\2\u013c\u013d\7*\2\2\u013d\u013e"+
		"\5a\61\2\u013e\u013f\7.\2\2\u013f\u0140\5a\61\2\u0140\u0141\7+\2\2\u0141"+
		"\u014f\3\2\2\2\u0142\u0143\7*\2\2\u0143\u0144\5g\64\2\u0144\u0145\7.\2"+
		"\2\u0145\u0146\5a\61\2\u0146\u0147\7+\2\2\u0147\u014f\3\2\2\2\u0148\u0149"+
		"\7*\2\2\u0149\u014a\5a\61\2\u014a\u014b\7.\2\2\u014b\u014c\5g\64\2\u014c"+
		"\u014d\7+\2\2\u014d\u014f\3\2\2\2\u014e\u013c\3\2\2\2\u014e\u0142\3\2"+
		"\2\2\u014e\u0148\3\2\2\2\u014fd\3\2\2\2\u0150\u0152\t\2\2\2\u0151\u0150"+
		"\3\2\2\2\u0151\u0152\3\2\2\2\u0152\u0154\3\2\2\2\u0153\u0155\t\3\2\2\u0154"+
		"\u0153\3\2\2\2\u0155\u0156\3\2\2\2\u0156\u0154\3\2\2\2\u0156\u0157\3\2"+
		"\2\2\u0157\u0158\3\2\2\2\u0158\u015a\7\60\2\2\u0159\u015b\t\3\2\2\u015a"+
		"\u0159\3\2\2\2\u015b\u015c\3\2\2\2\u015c\u015a\3\2\2\2\u015c\u015d\3\2"+
		"\2\2\u015df\3\2\2\2\u015e\u0162\7$\2\2\u015f\u0161\n\4\2\2\u0160\u015f"+
		"\3\2\2\2\u0161\u0164\3\2\2\2\u0162\u0160\3\2\2\2\u0162\u0163\3\2\2\2\u0163"+
		"\u0165\3\2\2\2\u0164\u0162\3\2\2\2\u0165\u016f\7$\2\2\u0166\u016a\7)\2"+
		"\2\u0167\u0169\n\5\2\2\u0168\u0167\3\2\2\2\u0169\u016c\3\2\2\2\u016a\u0168"+
		"\3\2\2\2\u016a\u016b\3\2\2\2\u016b\u016d\3\2\2\2\u016c\u016a\3\2\2\2\u016d"+
		"\u016f\7)\2\2\u016e\u015e\3\2\2\2\u016e\u0166\3\2\2\2\u016fh\3\2\2\2\u0170"+
		"\u0171\7v\2\2\u0171\u0172\7t\2\2\u0172\u0173\7w\2\2\u0173\u017a\7g\2\2"+
		"\u0174\u0175\7h\2\2\u0175\u0176\7c\2\2\u0176\u0177\7n\2\2\u0177\u0178"+
		"\7u\2\2\u0178\u017a\7g\2\2\u0179\u0170\3\2\2\2\u0179\u0174\3\2\2\2\u017a"+
		"j\3\2\2\2\u017b\u017c\7P\2\2\u017c\u017d\7w\2\2\u017d\u017e\7n\2\2\u017e"+
		"\u017f\7n\2\2\u017fl\3\2\2\2\u0180\u0182\t\3\2\2\u0181\u0180\3\2\2\2\u0182"+
		"\u0183\3\2\2\2\u0183\u0181\3\2\2\2\u0183\u0184\3\2\2\2\u0184n\3\2\2\2"+
		"\u0185\u0187\t\6\2\2\u0186\u0185\3\2\2\2\u0187\u0188\3\2\2\2\u0188\u0186"+
		"\3\2\2\2\u0188\u0189\3\2\2\2\u0189\u018a\3\2\2\2\u018a\u018b\b8\2\2\u018b"+
		"p\3\2\2\2\u018c\u0190\t\7\2\2\u018d\u018f\t\b\2\2\u018e\u018d\3\2\2\2"+
		"\u018f\u0192\3\2\2\2\u0190\u018e\3\2\2\2\u0190\u0191\3\2\2\2\u0191r\3"+
		"\2\2\2\u0192\u0190\3\2\2\2\21\2\u0132\u0135\u013a\u014e\u0151\u0156\u015c"+
		"\u0162\u016a\u016e\u0179\u0183\u0188\u0190\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}
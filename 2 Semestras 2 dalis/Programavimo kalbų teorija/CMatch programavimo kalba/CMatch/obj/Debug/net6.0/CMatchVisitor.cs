//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Labas\Desktop\Cmatch aruno\CMatch\CMatch\Content\CMatch.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace CMatch.Content {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="CMatchParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface ICMatchVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="CMatchParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantExpression([NotNull] CMatchParser.ConstantExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>parentsizedExpression</c>
	/// labeled alternative in <see cref="CMatchParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParentsizedExpression([NotNull] CMatchParser.ParentsizedExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>additiveExpression</c>
	/// labeled alternative in <see cref="CMatchParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpression([NotNull] CMatchParser.AdditiveExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>functionalCallExpression</c>
	/// labeled alternative in <see cref="CMatchParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionalCallExpression([NotNull] CMatchParser.FunctionalCallExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="CMatchParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierExpression([NotNull] CMatchParser.IdentifierExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="CMatchParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpression([NotNull] CMatchParser.NotExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>comparisonExpression</c>
	/// labeled alternative in <see cref="CMatchParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonExpression([NotNull] CMatchParser.ComparisonExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>multiplicativeExpression</c>
	/// labeled alternative in <see cref="CMatchParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpression([NotNull] CMatchParser.MultiplicativeExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>statementforExpression</c>
	/// labeled alternative in <see cref="CMatchParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementforExpression([NotNull] CMatchParser.StatementforExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>booleanExpression</c>
	/// labeled alternative in <see cref="CMatchParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanExpression([NotNull] CMatchParser.BooleanExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="CMatchParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCallExpression([NotNull] CMatchParser.FunctionCallExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>statmentmatchExpression</c>
	/// labeled alternative in <see cref="CMatchParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatmentmatchExpression([NotNull] CMatchParser.StatmentmatchExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>statementifExpression</c>
	/// labeled alternative in <see cref="CMatchParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementifExpression([NotNull] CMatchParser.StatementifExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] CMatchParser.ProgramContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine([NotNull] CMatchParser.LineContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] CMatchParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.statementif"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementif([NotNull] CMatchParser.StatementifContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.statmentelseif"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatmentelseif([NotNull] CMatchParser.StatmentelseifContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.statementfor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementfor([NotNull] CMatchParser.StatementforContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.statmentmatch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatmentmatch([NotNull] CMatchParser.StatmentmatchContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.identifierPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierPattern([NotNull] CMatchParser.IdentifierPatternContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.primaryPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryPattern([NotNull] CMatchParser.PrimaryPatternContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.pattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPattern([NotNull] CMatchParser.PatternContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.assigment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssigment([NotNull] CMatchParser.AssigmentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] CMatchParser.FunctionCallContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.functionalCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionalCall([NotNull] CMatchParser.FunctionalCallContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionList([NotNull] CMatchParser.ExpressionListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.functionDeclare"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclare([NotNull] CMatchParser.FunctionDeclareContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterList([NotNull] CMatchParser.ParameterListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] CMatchParser.ReturnStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] CMatchParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.multOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultOp([NotNull] CMatchParser.MultOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.addOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddOp([NotNull] CMatchParser.AddOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.compareOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareOp([NotNull] CMatchParser.CompareOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.boolOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolOp([NotNull] CMatchParser.BoolOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant([NotNull] CMatchParser.ConstantContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] CMatchParser.BlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.constantPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantPattern([NotNull] CMatchParser.ConstantPatternContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.decimalNumbersTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecimalNumbersTail([NotNull] CMatchParser.DecimalNumbersTailContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.decimalNumbersHead"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecimalNumbersHead([NotNull] CMatchParser.DecimalNumbersHeadContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.touplePattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTouplePattern([NotNull] CMatchParser.TouplePatternContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CMatchParser.wildcardPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWildcardPattern([NotNull] CMatchParser.WildcardPatternContext context);
}
} // namespace CMatch.Content
